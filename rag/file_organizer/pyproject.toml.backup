[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "rag-file-organizer"
version = "0.1.0"
description = "ML-based file organization and classification utility"
authors = ["TAI Team"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"

# Core ML dependencies
transformers = ">=4.30.0"
torch = ">=2.0.0"
pydantic = ">=2.0.0"
huggingface-hub = ">=0.16.0"

# Performance and utilities
accelerate = ">=0.20.0"
bitsandbytes = {version = ">=0.41.0", optional = true}
sentencepiece = ">=0.1.99"
tqdm = ">=4.65.0"

# Additional utilities
PyYAML = "^6.0.1"
click = "^8.1.7"
rich = "^13.9.4"

[tool.poetry.group.dev.dependencies]
# Development tools
pytest = "^8.1.0"
pytest-cov = "^4.1.0"
black = "^24.0.0"
ruff = "^0.1.0"
mypy = "^1.7.0"

[tool.poetry.extras]
# Optional dependencies
gpu = ["bitsandbytes"]

[tool.poetry.scripts]
# CLI entry points
file-organizer = "src.cli:main"
organize-files = "src.organizer:organize_command"

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
target-version = "py310"
line-length = 88
select = ["E", "W", "F", "I", "B", "C4", "UP"]
ignore = ["E501", "B008"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]